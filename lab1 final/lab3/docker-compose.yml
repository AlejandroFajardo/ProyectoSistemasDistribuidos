version: '3'
services: 
    fileserver1:
        container_name: fileserver1
        build: ./fileserver
        ports: 
            - "3000:3000"
        volumes: 
            - "./fileserver/server.js:/app/server.js"
        environment: 
            WHOAMI: fileserver1 

    fileserver2:
        container_name: fileserver2
        build: ./fileserver
        ports: 
            - "3001:3000"
        volumes: 
            - "./fileserver/server.js:/app/server.js"
        environment: 
            WHOAMI: fileserver2 

    fileserver3:
        container_name: fileserver3
        build: ./fileserver
        ports: 
            - "3002:3000"
        volumes: 
            - "./fileserver/server.js:/app/server.js"
        environment: 
            WHOAMI: fileserver3 

    middleware:
        container_name: middleware
        build: ./middleware
        ports: 
            - "3003:3000"
        volumes: 
            - "./middleware/server.js:/app/server.js"
            - "./middleware/public:/app/public"
            - "./middleware/util:/app/util"
            - "./middleware/temp:/app/temp"
            - "./middleware/views:/app/views"
        environment: 
            WHOAMI: fileserver3
        links: 
            - fileserver1
            - fileserver2
            - fileserver3
            - database
        depends_on: 
            - database
            
    database:
        container_name: database
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: example
            POSTGRES_USER: 'didier'
            POSTGRES_PASSWORD: '123'
            POSTGRES_DB: records
        volumes: 
            - ./database/init/:/docker-entrypoint-initdb.d/
        logging:
            driver: "none"

    adminer:
        image: adminer
        restart: always
        ports:
        - 8080:8080
    